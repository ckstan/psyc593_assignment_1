---
title: "Understanding World Population Dynamics"
subtitle: "Assignment 1 - PSYC593"
format:
  html: default
date: today
author: "Howard Tan"
editor: 
  markdown: 
    wrap: 72
---

<!-- These problems come from Imai, K. & Webb Williams, N. (2018). Quantitative Social Science: An introduction -->

<!-- in tidyverse. Princeton University Press. -->

<!-- The code giving partial solutions by VÃ­ctor H Cervantes -->

Understanding population dynamics is important for many areas of social
science. We will calculate some basic demographic quantities of births
and deaths for the world's population from two time periods: 1950 to
1955 and 2005 to 2010. We will analyze the following CSV data files -
`Kenya.csv`, `Sweden.csv`, and `World.csv`. Each file contains
population data for Kenya, Sweden, and the world, respectively. The
table below presents the names and descriptions of the variables in each
data set.

<!-- Note the syntax to create a table in markdown -->

<!-- Before the table there must be an empty line, and -->

<!-- the table begins with a line of dashes. -->

<!-- The column names are separated with spaces -->

<!-- and the first character must be a space -->

<!-- Then, segments of repeated dashes indicate the column separations (note -->

<!-- the space between groups of dashes before the character D of the column Description) -->

| Name       | Description                                                                             |
|:------------------|:---------------------------------------------------|
| `country`  | Abbreviated country name                                                                |
| `period`   | Period during which data are collected                                                  |
| `age`      | Age group                                                                               |
| `births`   | Number of births in thousands (i.e., number of children born to women of the age group) |
| `deaths`   | Number of deaths in thousands                                                           |
| `py.men`   | Person-years for men in thousands                                                       |
| `py.women` | Person-years for women in thousands                                                     |

Source: United Nations, Department of Economic and Social Affairs,
Population Division (2013). *World Population Prospects: The 2012
Revision, DVD Edition.*

```{r, setup, include=FALSE}
# include=FALSE hides output of this setup chunk
# Path setup code copied from https://canvas.illinois.edu/courses/49360/files/13546632?wrap=1

# Load packages ----
library(tidyverse)
library(rprojroot) # This package can be used to help with paths
library(here) # This package can also be used to help with paths

### Path variables ----
# root_path <- rprojroot::is_rstudio_project        # Using rprojroot knowing this is an RStudio project
here_path <- here::here()                         # Just using here. It follows additional heuristics
                                                  # to try to identify where the root directory should be.
# crit_path <- rprojroot::find_root(has_dir("code")) # Using the directory structure we defined

# Some of the subdirectories
# code_path <- file.path(root_path, "code") # Using the base R function file.path
# docs_path <- here::here("doc")           # Using here
data_path <- file.path(here_path, "data")
raw_data_path <- file.path(data_path, "raw_data")
# figs_path <- file.path(crit_path, "results", "figures")

# Read data ----

# Modified to read in any number of countries in the path folder

data_files <- list.files(path=raw_data_path, pattern="*.csv", full.names=TRUE)

country_names <- list.files(path=raw_data_path, pattern="*.csv") %>% 
              tools::file_path_sans_ext() %>% 
                tolower()
# print(country_names)  # We cleaned up the file paths so we have a list of names for later use

country <- lapply(data_files, read_csv) # This reads in all the csv's as data.frame's into a list

list2env(setNames(country,country_names), .GlobalEnv) # Unpack the list of countries we just loaded
                                                # We will use this whenever we need to do a comparison 
                                                # between specific countries easily inside R

```

<!-- The `read_csv` function from the package `readr` -->

<!-- is part of the `tidyverse`. It will read the data into a -->

<!-- special `data.frame` with more structure known as a `tibble` -->

The data are collected for a period of 5 years where *person-year* is a
measure of the time contribution of each person during the period. For
example, a person that lives through the entire 5 year period
contributes 5 person-years whereas someone who only lives through the
first half of the period contributes 2.5 person-years. Before you begin
this exercise, it would be a good idea to directly inspect each data
set. In R, this can be done with the `View` function, which takes as its
argument the name of a `data.frame` to be examined. Alternatively, in
RStudio, double-clicking a `data.frame` in the `Environment` tab will
enable you to view the data in a spreadsheet-like view.

## Question 1

We begin by computing *crude birth rate* (CBR) for a given period. The
CBR is defined as: $$ 
    \text{CBR} 
     =  \frac{\text{number of births}}{\text{number of person-years lived}}
  $$
<!-- It is also possible to include $\LaTeX$ syntax directly in the document. -->

Compute the CBR for each period, separately for Kenya, Sweden, and the
world. Start by computing the total person-years, recorded as a new
variable within each existing `data.frame` via the `$` operator, by
summing the person-years for men and women. Then, store the results as a
vector of length 2 (CBRs for two periods) for each region with
appropriate labels. You may wish to create your own function for the
purpose of efficient programming. Briefly describe patterns you observe
in the resulting CBRs.

### Answer 1
First we sum person-years using mutate rather than the $ operator, borrowing from
code that we use later on. Then for a particular country, we average the total 
births divided by person-years in a time period. 
```{r, cbr_code}

# Function to create combined person-years variable 
sum_py <- function (country) {
  country %>% 
    mutate(py = py.men + py.women) 
}

# Function to compute the Crude Birth Rate (CBR)
compute_cbr <- function (population_data) {
  population_data%>% 
    group_by(period) %>% 
      summarise(cbr = sum(births) / sum(py)) %>% 
        pull()
}

# Compute person-years
country<-lapply(country, sum_py) 

# Compute CBR for each data set
country_cbr <- lapply(country, compute_cbr)
```
<!-- Whenever you find that you will repeat the same calculation -->

<!-- on different sets of data, **consider** creating a function -->

<!-- instead of repeating the code for each piece of data. -->

<!-- The "pipe" `%>%` from package `magrittr` takes the output -->

<!-- from the left hand side and makes it the first argument of -->

<!-- the expression on the right hand side. -->

<!-- Starting in R 4.1.0, there is a base pipe operator `|>` -->

<!-- which has a similar behavior. -->

```{r, include=FALSE}
# Unpack the list of cbr's invisibly
list2env(setNames(country_cbr, paste0(country_names,"_cbr")), .GlobalEnv) # paste0 works like f-strings in Python

```

```{r, cbr_results}

kenya_cbr
sweden_cbr
world_cbr

```

We see that crude birth rate declines across Kenya, Sweden, and the world on average.


## Question 2

The CBR is easy to understand but contains both men and women of all
ages in the denominator. We next calculate the *total fertility rate*
(TFR). Unlike the CBR, the TFR adjusts for age compositions in the
female population. To do this, we need to first calculate the *age
specific fertility rate* (ASFR), which represents the fertility rate for
women of the reproductive age range $[15, 50)$. The ASFR for age range
$[x, x+\delta)$, where $x$ is the starting age and $\delta$ is the width
of the age range (measured in years), is defined as: $$
    \text{ASFR}_{[x,\ x+\delta)} 
    \ = \ \frac{\text{number of births to women of age $[x,\ x+\delta)$}}{\text{Number of person-years lived by women of age $[x,\ x+\delta)$}}
  $$ Note that square brackets, $[$ and $]$, include the limit whereas
parentheses, $($ and $)$, exclude it. For example, $[20, 25)$ represents
the age range that is greater than or equal to 20 years old and less
than 25 years old. In typical demographic data, the age range $\delta$
is set to 5 years. Compute the ASFR for Sweden and Kenya as well as the
entire world for each of the two periods. Store the resulting ASFRs
separately for each region. What does the pattern of these ASFRs say
about reproduction among women in Sweden and Kenya?

### Answer 2
First we compute ASFR. Then for a given country, we check how much the ASFR has changed
for each age group as we move across time periods.

```{r, asfr_code}
 
compute_asfr <- function (population_data) {
  population_data %>% 
    mutate(asfr = births / py.women)
}

# Compute how ASFR changes for each particular age group
compare_asfr_across_time <- function(country) {
  country %>% 
    arrange(age, period) %>% 
      group_by(age) %>% 
        mutate(asfr_diff = asfr - lag(asfr)) %>% 
          filter(!is.na(asfr_diff)) %>% # TODO: would like to filter out all the age groups outside the reproductive age range
            ungroup() %>% 
              select(age, asfr_diff)
}


```


```{r, include=FALSE}
# Run our functions on the datasets

country <- lapply(country, compute_asfr)

# Our modified dataframes are still inside a list, unpack it 
list2env(setNames(country,country_names), .GlobalEnv)
```


```{r, compare_asfr}

# Run comparison for Kenya and Sweden
compare_asfr_across_time(kenya)
compare_asfr_across_time(sweden)

```

In Kenya, ASFR is decreasing for all age groups that have given birth, 
and decreases more the younger the age group.
In Sweden, ASFR is increasing for those in the 30-39 age ranges and decreasing 
for all other age groups that have given birth.

## Question 3

Using the ASFR, we can define the TFR as the average number of children
women give birth to if they live through their entire reproductive age.
$$
  \text{TFR} 
   =   \text{ASFR}_{[15,\ 20)} \times 5 + \text{ASFR}_{[20,\ 25)} \times 5 
  + \dots + \text{ASFR}_{[45,\ 50)} \times 5
  $$

We multiply each age-specific fertility rate rate by 5 because the age
range is 5 years. Compute the TFR for Sweden and Kenya as well as the
entire world for each of the two periods. As in the previous question,
continue to assume that women's reproductive age range is $[15, 50)$.
Store the resulting two TFRs for each country or the world as a vector
of length two. In general, how has the number of women changed in the
world from 1950 to 2000? What about the total number of births in the
world?

### Answer 3
TFR is computed, though not used currently. Instead we can just show how much change
we see from 1950 to 2000 in terms of number of women and total births, both as a percentage 
change and in parentheses, the estimated amount.

```{r, tfr_code}

compute_tfr <- function (population_data) {
  population_data %>% 
    group_by(period) %>% 
      summarise(tfr = 5 * sum(asfr)) %>% 
        pull()
}

# Compute totals of women and births in the world by period
world_totals <- world %>% 
  group_by(period) %>% 
    summarise(total_women=sum(py.women),total_births=sum(births))


# Compare how much these totals have changed, removed parentheses to hide
changes_totals <- world_totals[2,-1] / world_totals[1,-1]
changes_summed <- world_totals[2,-1] - world_totals[1,-1]

```

```{r, include=FALSE}
# TODO: tfr is currently not being used in any part of the code, though 
# the instructions say to store the resulting TFR's as a vector.

# Run on all datasets

country_tfr <- lapply(country, compute_tfr) 

# New dataframes are still inside a list, unpack it for later use
list2env(setNames(country_tfr,paste0(country_names,"_tfr")), .GlobalEnv)

```

The number of women have increased by a factor of ~2.5 (9999096 women) and births
have increased by a factor of ~1.38 (~185690 births).

## Question 4

Next, we will examine another important demographic process: death.
Compute the *crude death rate* (CDR), which is a concept analogous to
the CBR, for each period and separately for each region. Store the
resulting CDRs for each country and the world as a vector of length two.
The CDR is defined as: $$ 
    \text{CDR} 
     =  \frac{\text{number of deaths}}{\text{number of person-years lived}}
  $$ Briefly describe patterns you observe in the resulting CDRs.

### Answer 4

We compute the CDRs.
```{r, cdr_code}
# Function to compute the Crude death rate (CDR)
compute_cdr <- function (population_data) {
  population_data %>% 
    group_by(period) %>% 
      summarise(cbr = sum(deaths) / sum(py)) %>% 
        pull()
}
```

```{r}
# Compute the CDR for each data set

country_cdr <- lapply(country, compute_cdr)

```

```{r, include=FALSE}
# New dataframes are still inside a list, unpack it for later use
list2env(setNames(country_cdr,paste0(country_names,"_cdr")), .GlobalEnv)
```


```{r, cdr_results}

kenya_cdr
sweden_cdr
world_cdr

```
In general, crude death rates have fallen over time, though it remained mostly stable in Sweden.


## Question 5

One puzzling finding from the previous question is that the CDR for
Kenya during the period of 2005-2010 is about the same level as that for
Sweden. We would expect people in developed countries like Sweden to
have a lower death rate than those in developing countries like Kenya.
While it is simple and easy to understand, the CDR does not take into
account the age composition of a population. We therefore compute the
*age specific death rate* (ASDR). The ASDR for age range $[x, x+\delta)$
is defined as: $$
    \text{ASDR}_{[x,\ x+\delta)} 
    \ = \ \frac{\text{number of deaths for people of age $[x,\ x+\delta)$}}
               {\text{number of person-years of people of age $[x,\ x+\delta)$}}
  $$ Calculate the ASDR for each age group, separately for Kenya and
Sweden, during the period of 2005-2010. Briefly describe the pattern you
observe.

### Answer 5

First we compute the ASDR by dividing deaths by person-years for each country.
```{r, asdr_code}
# Function to compute Age specific death rate (ASDR)
compute_asdr <- function (population_data) {
  population_data %>% 
    mutate(asdr = deaths/py)
}
```

```{r, include=FALSE}
# Compute ASDR for each data set
country <- lapply(country, compute_asdr)
list2env(setNames(country,country_names), .GlobalEnv)
```

Then we can compare ASDR's between Kenya and Sweden.
```{r, asdr_compare}

# Show ASDR's for Kenya and Sweden from 2005 to 2010
(kenya %>% 
  filter(period == "2005-2010") %>%
    select(age, asdr))
(sweden %>% 
  filter(period == "2005-2010") %>%
    select(age, asdr))

```

ASDR in Kenya drops by a factor of 10 as you go from ages 0-4 to 5-9. Then there is a gradual increase as ages increase. 
ASDR in Sweden appears to be much lower than Kenya's from ages 0-39.
    

## Question 6

One way to understand the difference in the CDR between Kenya and Sweden
is to compute the counterfactual CDR for Kenya using Sweden's population
distribution (or vice versa). This can be done by applying the following
alternative formula for the CDR. $$
    \text{CDR}
    \ = \ \text{ASDR}_{[0, 5)} \times P_{[0,5)} + \text{ASDR}_{[5, 10)}
    \times P_{[5, 10)} + \cdots 
  $$ where $P_{[x, x+\delta)}$ is the proportion of the population in
the age range $[x, x+\delta)$. We compute this as the ratio of
person-years in that age range relative to the total person-years across
all age ranges. To conduct this counterfactual analysis, we use
$\text{ASDR}_{[x,x+\delta)}$ from Kenya and $P_{[x,x+\delta)}$ from
Sweden during the period of 2005--2010. That is, first calculate the
age-specific population proportions for Sweden and then use them to
compute the counterfactual CDR for Kenya. How does this counterfactual
CDR compare with the original CDR of Kenya? Briefly interpret the
result.


### Answer 6
We first compute the population proportions for each country.

```{r, counterfactual_code}

compute_pop_prop <- function (population_data) {
  population_data %>% 
    group_by(period) %>%
      mutate(pop_prop = py / sum(py)) %>%
        ungroup()
}
```

```{r, include=FALSE}
# Compute population proportion for each data set

country <- lapply(country, compute_pop_prop)

list2env(setNames(country,country_names), .GlobalEnv)

```
Then we calculate CDR for Kenya with a new formula which takes into account the 
population proportions, using Sweden's population proportions.

```{r, kenya_sweden_swap}

# Compute Kenyas CDR if Kenya had Sweden's population distribution

(mutate(kenya,
 swap_cdr = kenya$asdr * sweden$pop_prop) %>%
  group_by(period) %>%
    summarise(cdrresweden = sum(swap_cdr))
)

# Pull up Kenya's real CDR from 2005-2010 for comparison
(kenya_cdr[2])

```

Using Sweden's population proportion to calculate CDR, we see that Kenya's CDR would 
be about twice what it is in reality.

